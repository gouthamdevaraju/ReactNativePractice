{"ast":null,"code":"var _jsxFileName = \"/Users/gdevaraju/Desktop/ForGoutham/StudyMaterial/ReactNative/Learning/ReactJSBasics/first-react-js-app/src/FormComponent/FormComp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./FormCompStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComp = props => {\n  _s();\n  const onAddHandler = event => {\n    event.preventDefault();\n    const newGoal = {\n      id: generateRandomString(10).toString(),\n      text: enteredText\n    };\n    console.log(newGoal);\n    setEnteredText('');\n    props.onAppendToForm(newGoal);\n  };\n  const generateRandomString = lenth => {\n    const char = 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz1234567890';\n    const random = Array.from({\n      length: lenth\n    }, () => char[Math.floor(Math.random() * char.length)]);\n    const randomString = random.join(\"\");\n    return setString(randomString);\n  };\n  const [enteredText, setEnteredText] = useState('');\n  const textChangeHandler = event => {\n    setEnteredText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-comp-style\",\n    onSubmit: onAddHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: enteredText,\n      onChange: textChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \" Add To Element \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(FormComp, \"TWchy7wNHWzoGLS8cMFKmzK0Cwk=\");\n_c = FormComp;\nexport default FormComp;\nvar _c;\n$RefreshReg$(_c, \"FormComp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormComp","props","_s","onAddHandler","event","preventDefault","newGoal","id","generateRandomString","toString","text","enteredText","console","log","setEnteredText","onAppendToForm","lenth","char","random","Array","from","length","Math","floor","randomString","join","setString","textChangeHandler","target","value","className","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gdevaraju/Desktop/ForGoutham/StudyMaterial/ReactNative/Learning/ReactJSBasics/first-react-js-app/src/FormComponent/FormComp.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport \"./FormCompStyle.css\"\n\nconst FormComp = props => {\n\n    const onAddHandler = event => {\n        event.preventDefault();\n\n        const newGoal = {\n            id: generateRandomString(10).toString(),\n            text: enteredText\n        }\n\n        console.log(newGoal);\n\n        setEnteredText('');\n\n        props.onAppendToForm(newGoal);\n    };\n\n    const generateRandomString = (lenth) => {\n        const char = 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz1234567890';\n        const random = Array.from(\n            {length: lenth},\n            () => char[Math.floor(Math.random() * char.length)]\n        );\n        const randomString = random.join(\"\");\n        return setString(randomString);\n    };\n\n    const [enteredText, setEnteredText] = useState ('');\n\n    const textChangeHandler = event => {\n        setEnteredText(event.target.value);\n    }\n\n    return (\n        <form className=\"form-comp-style\" onSubmit={onAddHandler}>\n            <input type=\"text\" value={enteredText} onChange={textChangeHandler}/>\n            <button type=\"submit\"> Add To Element </button>\n        </form>\n    );\n}\n\nexport default FormComp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAEtB,MAAMC,YAAY,GAAGC,KAAK,IAAI;IAC1BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,OAAO,GAAG;MACZC,EAAE,EAAEC,oBAAoB,CAAC,EAAE,CAAC,CAACC,QAAQ,EAAE;MACvCC,IAAI,EAAEC;IACV,CAAC;IAEDC,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;IAEpBQ,cAAc,CAAC,EAAE,CAAC;IAElBb,KAAK,CAACc,cAAc,CAACT,OAAO,CAAC;EACjC,CAAC;EAED,MAAME,oBAAoB,GAAIQ,KAAK,IAAK;IACpC,MAAMC,IAAI,GAAG,gEAAgE;IAC7E,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CACrB;MAACC,MAAM,EAAEL;IAAK,CAAC,EACf,MAAMC,IAAI,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACJ,MAAM,EAAE,GAAGD,IAAI,CAACI,MAAM,CAAC,CAAC,CACtD;IACD,MAAMG,YAAY,GAAGN,MAAM,CAACO,IAAI,CAAC,EAAE,CAAC;IACpC,OAAOC,SAAS,CAACF,YAAY,CAAC;EAClC,CAAC;EAED,MAAM,CAACb,WAAW,EAAEG,cAAc,CAAC,GAAGjB,QAAQ,CAAE,EAAE,CAAC;EAEnD,MAAM8B,iBAAiB,GAAGvB,KAAK,IAAI;IAC/BU,cAAc,CAACV,KAAK,CAACwB,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,oBACI9B,OAAA;IAAM+B,SAAS,EAAC,iBAAiB;IAACC,QAAQ,EAAE5B,YAAa;IAAA6B,QAAA,gBACrDjC,OAAA;MAAOkC,IAAI,EAAC,MAAM;MAACJ,KAAK,EAAElB,WAAY;MAACuB,QAAQ,EAAEP;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACrEvC,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5C;AAEf,CAAC;AAAApC,EAAA,CAvCKF,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}